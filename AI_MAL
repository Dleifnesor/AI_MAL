#!/bin/bash

# Colors for terminal output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

VERSION="1.0.0"

# Get the directory of this script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
PYTHON_SCRIPT="${SCRIPT_DIR}/adaptive_nmap_scan.py"

# Check if running as root (required for many scans)
if [ "$EUID" -ne 0 ]; then
    echo -e "${YELLOW}Warning: Some features require root privileges.${NC}"
    echo -e "Consider running with ${GREEN}sudo${NC} for full functionality."
    echo ""
fi

# Handle --version flag
display_version=false

for arg in "$@"; do
    if [ "$arg" = "--version" ]; then
        display_version=true
        break
    fi
done

# Help function
display_help() {
    echo -e "${GREEN}AI_MAL - Adaptive Nmap Scanner with Ollama and Metasploit Integration${NC}"
    echo "Version: ${VERSION}"
    echo ""
    echo "Usage: AI_MAL [options] [target]"
    echo ""
    echo -e "${YELLOW}Target Selection:${NC}"
    echo "  target                    Target IP address or hostname"
    echo "  --auto-discover           Automatically discover network and hosts"
    echo "  --interface INTERFACE     Network interface to use for discovery"
    echo "  --scan-all                Scan all discovered hosts"
    echo "  --network NETWORK         Specific network to scan (CIDR notation)"
    echo ""
    echo -e "${YELLOW}Scan Options:${NC}"
    echo "  -m, --model MODEL         Ollama model to use (default: qwen2.5-coder:7b)"
    echo "  -i, --iterations NUM      Maximum number of scan iterations (default: 3)"
    echo "  -c, --continuous          Run in continuous mode until manually stopped"
    echo "  -d, --delay SECONDS       Delay between scans (default: 2)"
    echo "  --host-timeout SECONDS    Timeout for host discovery (default: 1)"
    echo "  --stealth                 Enable stealth mode to avoid detection"
    echo ""
    echo -e "${YELLOW}Metasploit Options:${NC}"
    echo "  --msf                     Enable Metasploit integration"
    echo "  --exploit                 Automatically attempt exploitation"
    echo "  --workspace NAME          Metasploit workspace (default: adaptive_scan)"
    echo "  --auto-script             Auto-generate Metasploit resource scripts"
    echo "  --dos                     Attempt DoS attacks against target hosts"
    echo ""
    echo -e "${YELLOW}Script Generation Options:${NC}"
    echo "  --custom-scripts          Generate custom scripts based on scan results"
    echo "  --script-type TYPE        Type of scripts to generate (bash, python, ruby)"
    echo "  --execute-scripts         Execute generated scripts (WARNING: use with caution!)"
    echo ""
    echo -e "${YELLOW}General Options:${NC}"
    echo "  --full-auto               Full autonomous mode (enables multiple features)"
    echo "  --quiet                   Reduce output verbosity"
    echo "  --debug                   Enable debug logging"
    echo "  -h, --help                Display this help message and exit"
    echo "  --version                 Display version information and exit"
    echo ""
    echo -e "${YELLOW}Examples:${NC}"
    echo "  AI_MAL --auto-discover --stealth"
    echo "  AI_MAL 192.168.1.1 --msf --exploit"
    echo "  AI_MAL --full-auto --scan-all"
    echo "  AI_MAL --auto-discover --model qwen2.5-coder:7b --msf"
    echo "  AI_MAL 192.168.1.1 --dos --stealth"
    echo ""
    echo -e "${RED}SECURITY WARNING:${NC}"
    echo "  This tool is designed for legitimate security testing and educational purposes only."
    echo "  Unauthorized scanning/exploitation is illegal. Use responsibly and ethically."
    echo ""
    echo -e "${RED}WARNING:${NC}"
    echo "  Execute generated scripts at your own risk. Always review scripts before execution."
    echo ""
    echo -e "${RED}DoS WARNING:${NC}"
    echo "  The --dos option attempts to deny service to target systems."
    echo "  This can cause real damage and should ONLY be used in controlled test environments"
    echo "  with explicit permission. Using against unauthorized targets is illegal."
    echo ""
}

# Check if help is requested
for arg in "$@"; do
    if [ "$arg" = "-h" ] || [ "$arg" = "--help" ]; then
        display_help
        exit 0
    fi
done

# Check if Python is installed
if ! command -v python3 &> /dev/null; then
    echo -e "${RED}Error: Python 3 is required but not installed.${NC}"
    exit 1
fi

# Check if the Python script exists
if [ ! -f "${PYTHON_SCRIPT}" ]; then
    echo -e "${RED}ERROR: Cannot find the Python script at ${PYTHON_SCRIPT}${NC}"
    echo "Make sure you're running this script from the correct directory."
    exit 1
fi

# Make sure the script is executable
chmod +x "${PYTHON_SCRIPT}"

# Execute the Python script with all arguments passed to this script
if [ "${display_version}" = true ]; then
    python3 "${PYTHON_SCRIPT}" --version
else
    python3 "${PYTHON_SCRIPT}" "$@"
fi 